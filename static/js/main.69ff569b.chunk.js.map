{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","defaultProps","aboutText","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","rows","onChange","event","target","newText","showAlert","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69ff569b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div>\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          {/* \r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/About\">\r\n                  {props.aboutText}\r\n                </Link> */}\r\n              </li>\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                onClick={props.toggleMode}\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable DarkMode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = { title: \"set title here\", aboutText: \"set aboutText\" };\r\n","import React, { useState } from \"react\";\r\nimport './TextForm.css'\r\n\r\nfunction TextForm(props) {\r\n  const handleUppercaseClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to uppercase!','success');\r\n  };\r\n  const handleLowercaseClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to lowercase!','success');\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert('Text cleared!','success');\r\n  };\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0, 99999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert('Text copied successfully!','success');\r\n  };\r\n  const handleExtaSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(' '));\r\n    props.showAlert('Extra spaces has been removed!','success');\r\n  }\r\n  \r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"Enter the value\");\r\n  \r\n  return (\r\n    <>\r\n      <div className='container' style={{color: props.mode === 'dark' ? 'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            style={{backgroundColor: props.mode === 'dark' ? 'grey':'white',color: props.mode === 'dark' ? 'white':'#042743'}}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 btn-1\" onClick={handleUppercaseClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 btn-2\" onClick={handleLowercaseClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 btn-3\" onClick={handleClearClick}>\r\n          Clear text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 btn-4\" onClick={handleCopy}>\r\n          Copy text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 btn-5\" onClick={handleExtaSpaces}>\r\n          Remove Exta Spaces\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3n\" style={{color: props.mode === 'dark' ? 'white':'#042743'}} >\r\n        <h1>Your text summary</h1>\r\n        <p></p>\r\n        <p>\r\n          {text.split(\" \").length}words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:'Enter Something To Preview It Here'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TextForm;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = 'TextUtils is amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'TextUtils is awesome';\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/About\">\n              <About />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}